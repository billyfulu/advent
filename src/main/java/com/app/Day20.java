package com.app;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

public class Day20 {

    static String ENHANCEMENT_ALGORITHMz = "..#.#..#####.#.#.#.###.##.....###.##.#..###.####..#####..#....#..#..##..##" +
            "#..######.###...####..#..#####..##..#.#####...##.#.#..#.##..#.#......#.###" +
            ".######.###.####...#.##.##..#..#..#####.....#.#....###..#.##......#.....#." +
            ".#..#..##..#...##.######.####.####.#.#...#.......#..#.#.#...####.##.#....." +
            ".#..#...##.#.##..#...##.#.##..###.#......#.#.......#.#.#.####.###.##...#.." +
            "...####.#..#..#.##.#....##..#.####....##...##..#...#......#.#.......#....." +
            "..##..####..#...#.#.#...##..#.#..###..#####........#..####......#..#";

    static String INPUTz =
            "#..#.\n" +
            "#....\n" +
            "##..#\n" +
            "..#..\n" +
            "..###";

    static String

    static String INPUT =
            "...#....##.###...##.#..#....#.###.##.....#..#...###....#.###..###.##.#.#.#.....#....#...##...#..#..#\n" +
                    ".#...#.#.#.####..#...#..#.#..###.##..#.####...#....###..###...#.##.#...#....#.#..##.#....#...####.#.\n" +
                    "#####.#.#..##..##..#.#.###.#..##.##.##.##.....#..#....#.#.##.#.##.#..#.####...#.#.##..##.####..##..#\n" +
                    "...##.#...######.#..##..###...##..#.##.##.#..#####.##.#..##..#.#####.##...#.#.#..##.#.#......#..##..\n" +
                    "##.#...#..#.#.#....#..#.##.###..#...#.#.....###.#...###.#....#.##..###.#..#.##..#.##.#..#....##..###\n" +
                    "..#...##.#####..#.#.###....##.#.#..#.###.##.#####.##.....##...#......#..#.###.#.....###...####...#..\n" +
                    ".##.##.###.#.#...#..#####...#..##.#.#.##...#.##.#.#..###.#.####......#.#.##..#...#.##..#####...##..#\n" +
                    "....#.#..#.......#.#.#..###.####.#.#.#.###...##..###..#.######...####..###....##.#...##.#..########.\n" +
                    "...........#....###.#...##.#.##..##..##...#.#...###.#..###.#.......#........#.##..##.....#.##.#.###.\n" +
                    ".##.##..##...#.#.#...#.#.##.###.##..#.##.##.....######.##.....#....##....#..##.#....#..#######......\n" +
                    "#........####.#....#####.#..#..##...#.#.#####.#....##.#.##.##...#.#####.......#..###.#.###.####...##\n" +
                    "..####..#.#....######..###.#......##...#####.####.#.#.#######..#.###...##..#..#..##.#...#.....##.###\n" +
                    "####.#...####.##...#...#####...#######...#.#.##.#.##......##..###.#.#.##.#.###...#..#.###.##..##.#..\n" +
                    "..#.#...#.#.....#.#.##.###..##..#.#.##..###.....#..##......###.......#.##.##...####.#...###.....#...\n" +
                    "..##.######.#...#..##.###.#.#.....##......#..#......##.###.###.#.....#.#..##.###.#.#.#...#.#.###.#..\n" +
                    "##.#.#.###.#.##.#..####..##..#...###.#####.###.####.#.##.#..#.##.######....#.#.#...#.#.#......##..#.\n" +
                    "..###.#.##########.##...##..#.###.#...##...##..#...#..#.##.#....##.######...####....####.#...##.#..#\n" +
                    "####...#.#...#.#..#.#.#.....#.#.#..##....#.....###..#....#..#.#.##.#...#..#.###.#..##.#..##.#....#..\n" +
                    "##.####.#....#.##.#.#..#####.#.......#.####..#.#...###....###.#.###.#..#.###.#..####.#...#.#..#.#...\n" +
                    "#.###..#...###.#.#.####..#.#.##.#..###.#####..#........#..#.....##.#.#...######.#..##....###.##.##.#\n" +
                    "#..#.#..##.######.######.#.#.###...#....###.##..#.#.#.##.##..#.#...#..#..###....#......##...#######.\n" +
                    "#.####..#..##.#.###.#..##...####..#.##.#####..##.#..####..#.#..#.##..###...#..#..#.###.######.####..\n" +
                    "..##..#.##...#..##....#..##...##..##..#.###.#.###....##..###.........#..#.##.#..#......#.#####.##.##\n" +
                    "#.##........####..#....#..#..####.######..#.######.......#.###.#.##...#.#..#.#.#.#####.#.##....#...#\n" +
                    "#.#.#......#.##.#.#....#.#..#.#.##...#...###..###.#.#...##...#....#.#.#..###...#.#..##.#.##.#....###\n" +
                    ".#....#####.#...##.#.########...###.#####.#.#....####..#.#...###.##...#..#.#....#.##..#.#.#####.#...\n" +
                    ".#..##.#......##.####..##..#..##....##.##.###..#..##.#...####..##...##...#..#...####..####.#.#.##.##\n" +
                    ".#...###..####..#.##....##.#..#...###...#.#..#.#..##.....##...#.##...#.#.######.#.##.....#.###......\n" +
                    "...#.#....#..############.##...#.#...##..###..#..#.##.####.###.#.##..##.###..#..###.####..#....####.\n" +
                    "....###..#.##.####..#...##.##.###...#..#.#.##.#..#.#.##..#..........#.##....#.###.#######..##.#.#.##\n" +
                    "###.#.##.##.#####..#.###.#.#.#.#####.#.##...##...#.#.#############....####.###....#####.....#..##.##\n" +
                    "#######.#.....####.#..#.###..##...##.#..##.....#.##.....########....#..##.####.###..#..##......#..##\n" +
                    "...#.#.#...####.#.###.......#...##..###...##...####.#...###..##...#..###.##.#####.####.#...#...#####\n" +
                    "##.##.#.#.#.#.....##.##.##.####.#.#...###..#..#....#...#..........##.###.#..#.###.######.##..#..#...\n" +
                    "##...#..####..#.##.###...#.#.##..##.#.##..##...#.#..###...#....#....###.###.#.#.#####....#.###.#.###\n" +
                    ".....##.#..#.######.#.#.##.###...#..#...#.....#.##.####..##..##.###.#########....#...#.#..##..###...\n" +
                    ".#...#######.#..#.#..#.##########...##.#.##....########..#.####.#.###.##..#..#..#.#..#.#.#######.#.#\n" +
                    ".#..#..#..#.##....#.....#.##.#.###.###..####..##..##..#.#.#.#.#.##..#.#..#.########.##.####...###...\n" +
                    "##.#.#..#.#.#.#.#...#.###.#.####.####.#..##..#.#.#.####.#...#.###.#.######..#.#####.##..##..#..####.\n" +
                    "##....#..#.####.#..#...#...########.#.#.#####.###.###..##..##.##.....#.....####.##...#.##.#....#..#.\n" +
                    ".##.##...###...#.##.##...###.####.#..##.#.###.####.#.....####..#.##.##..###.##.#.#.#.##..#.....#...#\n" +
                    ".##..####..#..###..#...##..#.........#...####.#.#######....##..#...#.....##..#.#.#..#.##.##.##..##..\n" +
                    "##.###.###.##..####.#......#.#....#.####.#####....#.#.#....##.###...#.#...##.##...#####.#####..#.#..\n" +
                    "####.##....##.###....#.#..##.#####.##.#.##..####...##...##.###.#..#.##...#.####.###...########......\n" +
                    "###.####.##..#...###...######.###..##.#.#.#.#.#.#....#.####...#..#.....##...#.##...#.#..#.#......##.\n" +
                    "...##..#....#.#...#..##....#.....##..#.#...#.###.#..#.#..#......##.##..#.##....####.#..#.###...##...\n" +
                    "##..#.##...#..##....#.#.....#..#.###........###...#..######...#..###...##...####.#.#..##.###.......#\n" +
                    ".###...#.###...#..####.#.##.##.##...#...#..##.#....##....###..#...##..###...#....##.#...###..#.#.###\n" +
                    "...#..#..#.#...##.##.##...#####.#.######..#..#...##.#...#.#....###.#.#.####..#....#..#.#..####...#..\n" +
                    "#...#..####.##.##....##.#.#.##.#.......###.#.##..##...#.#..##.#.####.#..##.##...#..#.###..##.......#\n" +
                    "###..##.#..#.#...#.#......#.##.#.##..#..#...#....#.....#..##..#..#..###.#..#...#.#.....#.###......##\n" +
                    "#..##.#####.#.##.####.......#.#..#.##...#.#.#....#.#.######...##...##...####.#..#..#.###.#.#...####.\n" +
                    "....#.#.##.#.##.#.##.###.#.###..#####.#.###.##..#.#..##....###...##...#.#..#.##..####.###.######.#.#\n" +
                    "..###.##.....#.#.####.##.#.#.##.#####...##.#.##.###.#..##.###.#.###.........##....##.#.##....#.##...\n" +
                    "##...#.#..#.#.#.###.###.#...#.#..#..#...###.###..####....####.........#..#####.##..#..##...##.##...#\n" +
                    ".#..#..#.##.###.#...#...#...#.##...#...##....###.......#.#####..#..###...######..##..##.##.#.#.###.#\n" +
                    "..#...#.##.##.####....##.#..#.##.##.#.##.#.#...#.#.#####......###...#..#.#...#.#..###.####...##.#.#.\n" +
                    ".#.....##.#######..#...#.#.##.#.#...#.....##.#.......##......##.##..#.#.#.##..#.##..##.#.##..##.#..#\n" +
                    "###.##..##.###.##..#.#.#.#.#.##......##..##...#.##..##.#.####..###.#...#....##.##.#.#...#.....#.##..\n" +
                    "###..#...#..##.##..#.#...######...#.###..###..##.##...#..###.....#...####...#..#...#.##.#.###.......\n" +
                    "#...###.#...#####.#.##...#...#.....###..#..#.##.##.###....##.#..#.....#..#.##.#..####.##.....##.#..#\n" +
                    "#..##...##..###......#####.##.#.#..##.##.##..#.......#..#.###.#...##..#####.####.#.....#.###..###.##\n" +
                    "...#.......#.#..######..####.....##.###..#####..##....#..#.#...#..##.#....###.#..........###.#.#.#..\n" +
                    ".###...#.##..#.#...#..##..###.##..#.#.##.#.#..#.#..########..#.#.#...#.##..#...###...##..##..##.####\n" +
                    ".#####....##..#.####.#..#..#.###.####....#..#...#.#.##.#..##..#.###.###...#...#....##.....##.#..###.\n" +
                    ".#..###.##..###......#.#.##..#########.#.###............##.##......#####.#..#..######..#....#.##.##.\n" +
                    ".##.......####..###..###...####..#..#####.####..##.....#.###..#.##..##.#.#....##...#..##....##.#.###\n" +
                    "###.###.#..#.##....##.#..#..#..#..####.#.#.##.#.##.#.#####.#..#.#.#####.####.##.#.####.....#.#.#####\n" +
                    "##..#.####..##.####.#####..##.#..###..##.##.....####.##..##..#.#..#......##.###.#..########.#.#..#..\n" +
                    "####..###.#.######...####.###..#.#....##.#.#.##.#.#.#.##.#....#.####.#.#.#####.......##.#...##.##...\n" +
                    "..#..##.#.##.#.....#.#.##.#.#.#####......##.##.##.####....####.#.#.###....##..#..#.#####.##...##.#.#\n" +
                    "....##..#..#.#.#.##.##.#.###..#.###.....#.##.#.##.#.###.#....#.....#....#####.....#.##...#.##....###\n" +
                    "###.#.##.###..###...#...#...#.....#..##...##.###.#..##..##.#.#.#######.....#..#.#.#.####.#.#...###.#\n" +
                    ".##.####.#.##..#.#....###..#.##.#.....##..##.##.....###..##.#...####.##.#.#######.###........#.#.###\n" +
                    "......#.##.######.##...##.#..##..#.#####...###.#....###.######.#####...#.#..##..#.##....#..#....#..#\n" +
                    "##...#....#..##..##.#.##.#.#...##.##.#...##.##.##..#..#...#...##..####..######..#..#.###...#..#..#..\n" +
                    "....#..#...#.#.###....#..#.#.......#..#.###..#######.##.#.####.#..#.#.#..##....#..#.##...#.###.####.\n" +
                    "..###..##.#...##.##....####.##..##.##.##.##...###..##.#.#....##.##...##.....##..#.###.#.##..#######.\n" +
                    "#.##........##....#.#..#..#..#.#.###..#.##.#.#.###...#.##...#....###..##.#.#..#.###.#..##..#.#...##.\n" +
                    "##......#...#.#...###..........#...##.#..######...#.....#.#.##.###.#.#.#.##.###.#....#..#.##.##.#..#\n" +
                    "#..#####...#.#..###..#..##.##..##...#.##...#.###.#..#.#..##.###.####.##..##.##...##..#.##.#...#.####\n" +
                    "##.###..#.....###.#.#.#..#..##.#........#####.#..#.####.#..##.##..#.##...#.#...#.#.##.##..#.###.###.\n" +
                    "#####.#..#.##...#.###..#####...#####..##..#..#..#####..###.####.#...#...####..##.###....##.##.###...\n" +
                    "##.####.#..#..##.#..#..###...####.##..#.#..#.##.#.###.#..#.#...#..##.#.#..#######.##.#..##..###...##\n" +
                    "##..##.....##..#####..#...###.##.###.####.###.##.#.########...#.#.####..###.##.#..##########.#.....#\n" +
                    "#.#.##...#.#...##.##..#.#.#...#.#.##.#.###.#...##...##.....###.#..#.#..####.#..#.#######.##.#.##.##.\n" +
                    "##.#..####.#.....#.#..##.##...###...#..#.##.##..###.#####.##....#.#..#...#####...#.##..#.#..#....#..\n" +
                    "##.###.##.#...#.##.....##..###..#.#..###..##.###.....#...#...#.##.#....#..#...####.#..#..#.#.#.#.###\n" +
                    ".####......###.#........#..#..#....###.#.#.....#..#...###.####.#...###.#..###.#.#...###...###..#####\n" +
                    "##.#.###.#.#.#..##.##.###.######...#.#.##..#...##..#...##.#.##..#.#..#.##.#.#.##.##.#..####...#.#...\n" +
                    "##.......#.##...#.#.....##..#.#..#...#..#..#..#..#.#.###.##.#.#.#########.#.####...##......######.##\n" +
                    "....##.#.##.##.#.#.#.#.##..####....#..###.#..#.##...####.....##.#.....#####.##.......##.##.#..###.#.\n" +
                    ".#####..##...###.##.#.....#......#..#.#..#.#..#......##..##.##..#..##.....#...##.#....#..##..#..##.#\n" +
                    "#.###..##...###....#.###.#.#.##..#....##...#..#.######....##.#....##...####.###.#####..##......#...#\n" +
                    "##..#.#...#####..##.#.###..##..#.#.####..#..#.##.#.#.#..#.##..#.###.#####.##..#...#..#.###..#.##...#\n" +
                    "#.#...#######..#.####...##.#.#######..####..#.###...####.####..#...#.#....#..#.##...#.##.#..####.#.#\n" +
                    "#...#.##......######.#.####..####.#.#..#.#..#####...##..#.##.###.#..#.####.###.##..#..####..####....\n" +
                    "###.###..#.......###..#..#.##...##.###..#...###.#....#...###.#.#.#.#...#....#.##..##.########.##....\n" +
                    ".#.....##.....#.#.####......#.#.#..#######.#....#.....###...###.##...#..#..##.###.#...#..###.#.#####\n" +
                    "##..#..###.##...#...#...####..###...###.#.#..###.#####...#####..#####..#.#.####.##.#....#.####..####";


    String pixelToBinary(String pixel) {
        StringBuilder binary = new StringBuilder();
        for (char aChar : pixel.toCharArray()) {
            if (aChar == '.') {
                binary.append("0");
            } else if (aChar == '#') {
                binary.append("1");
            } else {
                throw new IllegalArgumentException("character: " + aChar + " is not allowed");
            }
        }
        return binary.toString();
    }

    private char[][] convertInputTo2DArray(String input) {
        String[] inputRows = input.split("\n");
        char[][] rows = new char[inputRows.length][inputRows[0].length()];
        for (int i = 0; i < inputRows.length; i++) {
            rows[i] = inputRows[i].toCharArray();
        }
        return rows;
    }

    private String getPixelToConvert(char[][] x, int startI, int startJ) {
        StringBuilder pattern = new StringBuilder();
        int max = 3;
        for (int i = startI; i < startI + max; i++) {
            char[] row = x[i];
            for (int j = startJ; j < startJ + max; j++) {
                char pixel = row[j];
                pattern.append(pixel);
            }
        }
        return pattern.toString();
    }

    void solve1() {
        String input = surroundWithBlack(INPUT, 70);
        List<String> outputList = getOutputString(input);
        String input2 = getInputFromOutput(outputList);
        List<String> outputString = getOutputString(input2);

        int countHsh = getCountHsh(outputString);

        printOutPut(outputString);
        System.out.println();
        System.out.println("count: " + countHsh);
    }

    private int getCountHsh(List<String> outputString) {
        int countHsh = 0;
        for (String s : outputString) {
            for (char c : s.toCharArray()) {
                if ('#' == c) {
                    countHsh++;
                }
            }
        }
        return countHsh;
    }

    void solve2() {
        String input = surroundWithBlack(INPUT, 150);
        List<String> outputList = getOutputString(input);
        String input2;
        for (int i = 0; i < 49; i++) {
            input2 = getInputFromOutput(outputList);
            outputList = getOutputString(input2);
        }

        int countHsh = getCountHsh(outputList);

        printOutPut(outputList);
        System.out.println();
        System.out.println("count: " + countHsh);
    }

    private String surroundWithBlack(String input, int count) {
        count--;
        String s = surroundWithBlack(input);
        for (int i = 0; i < count; i++) {
            s = surroundWithBlack(s);
        }
        return s;
    }

    private List<String> getOutputString(String input) {
        char[][] inputArray = convertInputTo2DArray(input);
        char[][] dOutputArray = get2DOutputArray(inputArray);

        return getOutputList(dOutputArray);
    }

    private String surroundWithBlack(String input) {
        String newLine = "\n";
        String[] inputRows = input.split(newLine);
        List<String> inputList = new ArrayList<>(Arrays.asList(inputRows));

        int length = inputList.get(0).length() + 2;

        StringBuilder biggerInput = new StringBuilder();
        String black = ".".repeat(length);
        biggerInput.append(black).append(newLine);
        inputList.forEach(s -> biggerInput.append(".").append(s).append(".").append(newLine));
        biggerInput.append(black).append(newLine);

        return biggerInput.toString();
    }

    private void printOutPut(List<String> outputList) {
        for (String output : outputList) {
            System.out.println(output);
        }
    }

    private String getInputFromOutput(List<String> outputList) {
        StringBuilder stringBuilder = new StringBuilder();
        for (String output : outputList) {
            stringBuilder.append(output).append("\n");
        }
        return stringBuilder.toString();
    }


    private List<String> getOutputList(char[][] dOutputArray) {
        List<String> output = new ArrayList<>();
        for (char[] outputLine : dOutputArray) {
            output.add(String.valueOf(outputLine));
        }
        return output;
    }

    private char[][] get2DOutputArray(char[][] x) {
        char[][] output = new char[x.length - 2][x[0].length - 2];
        int rowC  = 0;
        for (int i = 1; i < x.length - 1; i++) {
            char[] row = x[i];
            char[] outputRow = new char[row.length - 2];
            int col  = 0;
            for (int j = 1; j < row.length - 1; j++) {
                String pixels = getPixelToConvert(x, i - 1, j - 1);
                String binary = pixelToBinary(pixels);
                int decimal = binaryToDecimal(binary);
                char outPutPixel = getOutPutPixel(decimal);
                outputRow[col] = outPutPixel;
                col++;
            }
            output[rowC] = outputRow;
            rowC++;
        }

        return output;
    }

    private char getOutPutPixel(int decimal) {
        char[] algorithm = ENHANCEMENT_ALGORITHM.toCharArray();
        return algorithm[decimal];
    }

    int binaryToDecimal(String binary) {
        return Integer.parseInt(binary, 2);
    }

    public static void main(String[] args) {
        Day20 day20 = new Day20();
        day20.solve1();
        for (int i = 0; i < 3; i++) {
            System.out.println();
        }
        day20.solve2();
    }
}
